{"version":3,"file":"static/js/123.e8fa5fd9.chunk.js","mappings":"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","sources":["components/Header.jsx","components/ComposeMail.jsx","config/sidebar.config.js","components/SideBarContent.jsx","components/SideBar.jsx","pages/Main.jsx","services/api.urls.js","services/api.js","hooks/useApi.jsx"],"sourcesContent":["\n\nimport { AppBar, Toolbar, Box, InputBase, styled } from '@mui/material';\nimport { Menu as MenuIcon, Tune, HelpOutlineOutlined, SettingsOutlined, \n    AppsOutlined, AccountCircleOutlined, Search } from '@mui/icons-material'\n\nimport { mailFlowLogo } from '../constants/constant';\n\nconst StyledAppBar = styled(AppBar)`\n    background: #f5F5F5;\n    box-shadow: none;\n`;\n\nconst SearchWrapper = styled(Box)`\n    background: #EAF1FB;\n    margin-left: 80px;\n    border-radius: 8px;\n    min-width: 690px;\n    max-width: 720px;\n    height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 20px;\n    & > div {\n        width: 100%\n    }\n`\n\nconst OptionsWrapper = styled(Box)`\n    width: 100%;\n    display: flex;\n    justify-content: end;\n    & > svg {\n        margin-left: 20px;\n    }\n`\n\nconst Header = ({ toggleDrawer }) => {\n\n    return (\n        <StyledAppBar position=\"static\">\n            <Toolbar>\n                <MenuIcon color=\"action\" onClick={toggleDrawer} />\n                <img src={mailFlowLogo} alt=\"logo\" style={{ width: 110, marginLeft: 15 }} />\n                <SearchWrapper>\n                    <Search color=\"action\" />\n                    <InputBase placeholder=\"Find messages...\" />\n                    <Tune  color=\"action\"/>\n                </SearchWrapper>\n\n                <OptionsWrapper>\n                    <HelpOutlineOutlined color=\"action\" />\n                    <SettingsOutlined color=\"action\" />\n                    <AppsOutlined color=\"action\" />\n                    <AccountCircleOutlined color=\"action\" />\n               </OptionsWrapper>\n            </Toolbar>\n        </StyledAppBar>\n    )\n}\n\nexport default Header;","import { useState } from 'react';\n\nimport { Dialog, styled, Typography, Box, InputBase, TextField, Button } from '@mui/material'; \nimport { Close, DeleteOutline } from '@mui/icons-material';\nimport useApi from '../hooks/useApi';\nimport { API_URLS } from '../services/api.urls';\n\nconst dialogStyle = {\n    height: '90%',\n    width: '80%',\n    maxWidth: '100%',\n    maxHeight: '100%',\n    boxShadow: 'none',\n    borderRadius: '10px 10px 0 0',\n}\n\nconst Header = styled(Box)`\n    display: flex;\n    justify-content: space-between;\n    padding: 10px 15px;\n    background: #f2f6fc;\n    & > p {\n        font-size: 14px;\n        font-weight: 500;\n    }\n`;\n\nconst RecipientWrapper = styled(Box)`\n    display: flex;\n    flex-direction: column;\n    padding: 0 15px;\n    & > div {\n        font-size: 14px;\n        border-bottom: 1px solid #F5F5F5;\n        margin-top: 10px;\n    }\n`;\n\nconst Footer = styled(Box)`\n    display: flex;\n    justify-content: space-between;\n    padding: 10px 15px;\n    align-items: center;\n`;\n\nconst SendButton = styled(Button)`\n    background: #0B57D0;\n    color: #fff;\n    font-weight: 500;\n    text-transform: none;\n    border-radius: 18px;\n    width: 100px;\n`\n\nconst ComposeMail = ({ open, setOpenDrawer }) => {\n    const [data, setData] = useState({});\n    const sentEmailService = useApi(API_URLS.saveSentEmails);\n    const saveDraftService = useApi(API_URLS.saveDraftEmails);\n\n    const config = {\n        Username: process.env.REACT_APP_USERNAME,\n        Password: process.env.REACT_APP_PASSWORD,\n        Host: 'smtp.elasticemail.com',\n        Port: 2525,\n    }\n\n    const onValueChange = (e) => {\n        setData({ ...data, [e.target.name]: e.target.value })\n    }\n\n    const createPayload = (type) => {\n        return {\n            to : data.to,\n            from : \"athar.dev@example.com\",\n            subject : data.subject,\n            body : data.body,\n            date: new Date(),\n            image: '',\n            name: 'Code for Interview',\n            starred: false,\n            type: type\n        }\n    }\n\n    const sendEmail = async (e) => {\n        e.preventDefault();\n\n        if (window.Email) {\n            window.Email.send({\n                ...config,\n                To : data.to,\n                From : \"codeforinterview03@gmail.com\",\n                Subject : data.subject,\n                Body : data.body\n            }).then(\n                message => alert(message)\n            );\n        }\n\n        const payload = createPayload('sent');\n\n        sentEmailService.call(payload);\n\n        if (!sentEmailService.error) {\n            setOpenDrawer(false);\n            setData({});\n        } else {\n\n        }\n    }\n\n    const closeComposeMail = (e) => {\n        e.preventDefault();\n\n        const payload = createPayload('drafts');\n\n        saveDraftService.call(payload);\n\n        if (!saveDraftService.error) {\n            setOpenDrawer(false);\n            setData({});\n        } else {\n\n        }\n    }\n\n    return (\n        <Dialog\n            open={open}\n            PaperProps={{ sx: dialogStyle }}\n        >\n            <Header>\n                <Typography>New Message</Typography>\n                <Close fontSize=\"small\" onClick={(e) => closeComposeMail(e)} />\n            </Header>\n            <RecipientWrapper>\n                <InputBase placeholder='Recipients' name=\"to\" onChange={(e) => onValueChange(e)} value={data.to} />\n                <InputBase placeholder='Subject' name=\"subject\" onChange={(e) => onValueChange(e)} value={data.subject} />\n            </RecipientWrapper>\n            <TextField \n                multiline\n                rows={20}\n                sx={{ '& .MuiOutlinedInput-notchedOutline': { border: 'none' } }}\n                name=\"body\"\n                onChange={(e) => onValueChange(e)}\n                value={data.body}\n            />\n            <Footer>\n                <SendButton onClick={(e) => sendEmail(e)}>Dispatch</SendButton>\n                <DeleteOutline onClick={() => setOpenDrawer(false)} />\n            </Footer>\n        </Dialog>\n    )\n}\n\nexport default ComposeMail;","\n\nimport { routes } from \"../routes/routes\"\nimport { Photo, StarOutline, SendOutlined, InsertDriveFileOutlined, DeleteOutlined } from '@mui/icons-material';\n\nexport const SIDEBAR_DATA = [\n    {\n        name: 'inbox',\n        title: 'Inbox',\n        icon: Photo,\n        path: routes.emails.path\n    },\n    {\n        name: 'starred',\n        title: 'Starred',\n        icon: StarOutline,\n        path: routes.emails.path\n    },\n    {\n        name: 'sent',\n        title: 'Sent',\n        icon: SendOutlined,\n        path: routes.emails.path\n    },\n    {\n        name: 'drafts',\n        title: 'Drafts',\n        icon: InsertDriveFileOutlined,\n        path: routes.emails.path\n    },\n    {\n        name: 'bin',\n        title: 'Bin',\n        icon: DeleteOutlined,\n        path: routes.emails.path\n    },\n    \n];","import { useState } from 'react';\nimport { Button, List, ListItem, Box, styled } from '@mui/material';\nimport ComposeMail from './ComposeMail';\nimport { SIDEBAR_DATA } from '../config/sidebar.config';\nimport { CreateOutlined } from '@mui/icons-material';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { routes } from '../routes/routes';\n\nconst Container = styled(Box)`\n    padding: 8px;\n    & > ul {\n        padding: 10px 0 0 5px;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n        & > a {\n            text-decoration: none;\n            color: inherit;\n        }\n        & > a > li > svg {\n            margin-right: 20px;\n        }\n    }\n`\n\nconst ComposeButton = styled(Button)`\n    background: #c2e7ff;\n    color: #001d35;\n    border-radius: 16px;\n    padding: 15px;\n    min-width: 140px;\n    text-transform: none;\n`\n\nconst SideBarContent = () => {\n\n    const [openDrawer, setOpenDrawer] = useState(false);\n\n    const { type } = useParams();\n\n    const onComposeClick = () => {\n        setOpenDrawer(true);\n    }\n\n    return (\n        <Container>\n            <ComposeButton onClick={() => onComposeClick()}>\n                <CreateOutlined style={{ marginRight: 10 }} />New Mail\n            </ComposeButton>\n            <List>\n                {\n                    SIDEBAR_DATA.map(data => (\n                        <NavLink key={data.name} to={`${routes.emails.path}/${data.name}`}>\n                            <ListItem style={ type === data.name.toLowerCase() ? {\n                                backgroundColor: '#d3e3fd',\n                                borderRadius: '0 16px 16px 0'\n                            } : {}}><data.icon fontSize=\"small\" />{data.title}</ListItem>\n                        </NavLink>\n                    ))\n                }\n            </List>\n            <ComposeMail open={openDrawer} setOpenDrawer={setOpenDrawer} />\n        </Container>\n    )\n}\n\nexport default SideBarContent;","\nimport { Drawer, styled } from \"@mui/material\";\n\nimport SideBarContent from \"./SideBarContent\";\n\nconst StyledDrawer = styled(Drawer)`\n    margin-top: 54px;\n`\n\nconst SideBar = ({ toggleDrawer, openDrawer }) => {\n\n    return (\n        <StyledDrawer\n            anchor='left'\n            open={openDrawer}\n            onClose={toggleDrawer}\n            hideBackdrop={true}\n            ModalProps={{\n                keepMounted: true,\n            }}\n            variant=\"persistent\"\n            sx={{\n                '& .MuiDrawer-paper': { \n                    width: 250,\n                    borderRight: 'none',\n                    background: '#f5F5F5',\n                    marginTop: '64px',\n                    height: 'calc(100vh - 64px)'\n                },\n            }}\n          >\n            <SideBarContent />\n        </StyledDrawer>\n    )\n}\n\nexport default SideBar;","import { useState, Suspense } from 'react';\n\nimport { Header, SideBar } from '../components';\nimport { Box, styled } from '@mui/material';\nimport { Outlet } from 'react-router-dom';\nimport SuspenseLoader from '../components/common/SuspenseLoader';\n\nconst Wrapper = styled(Box)`\n    display: flex;\n`;\n\nconst Main = () => {\n\n    const [openDrawer, setOpenDrawer] = useState(true);\n\n    const toggleDrawer = () => {\n        setOpenDrawer(prevState => !prevState);\n    }\n    \n    return (\n        <>\n            <Header toggleDrawer={toggleDrawer} />\n            <Wrapper>\n                <SideBar toggleDrawer={toggleDrawer} openDrawer={openDrawer} />\n                <Suspense fallback={<SuspenseLoader />} >\n                    <Outlet context={{ openDrawer }} />\n                </Suspense>\n            </Wrapper>\n        </>\n    )\n}\n\nexport default Main;","export const API_URLS = {\n    saveSentEmails: {\n        endpoint: 'save',\n        method: 'POST'\n    },\n    saveDraftEmails: {\n        endpoint: 'save-draft',\n        method: 'POST'\n    },\n    getEmailFromType: {\n        endpoint: 'emails',\n        method: 'GET'\n    },\n    toggleStarredMails: {\n        endpoint: 'starred',\n        method: 'POST'\n    },\n    deleteEmails: {\n        endpoint: 'delete',\n        method: 'DELETE'\n    },\n    moveEmailsToBin: {\n        endpoint: 'bin',\n        method: 'POST'\n    },\n    toggleReadMails: {\n        endpoint: 'read',\n        method: 'POST'\n    }\n}","import axios from 'axios';\n\nconst API_URI = 'http://localhost:8000'\n\nconst API_MAILFLOW = async (serviceUrlObject, requestData = {}, type) => {\n    return await axios({\n        method: serviceUrlObject.method,\n        url: `${API_URI}/${serviceUrlObject.endpoint}`,\n        data: requestData\n    })\n}\n\nexport default API_MAILFLOW;","import { useState } from 'react';\nimport API from '../services/api';\n\nconst useApi = (urlObject) => {\n    const [response, setResponse] = useState(null);\n    const [error, setError] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n\n    const call = async (payload, type = '') => {\n        setResponse(null);\n        setIsLoading(true);\n        setError(\"\");\n        \n        try {\n            let res = await API(urlObject, payload, type);\n            setResponse(res.data);\n        } catch (error) {\n            setError(error.message);\n        } finally {\n            setIsLoading(false);\n        }\n    }\n\n    return { call, response, error, isLoading };\n}\n\nexport default useApi;"],"names":["StyledAppBar","styled","AppBar","_templateObject","_taggedTemplateLiteral","SearchWrapper","Box","_templateObject2","OptionsWrapper","_templateObject3","_ref","toggleDrawer","_jsx","position","children","_jsxs","Toolbar","MenuIcon","color","onClick","src","mailFlowLogo","alt","style","width","marginLeft","Search","InputBase","placeholder","Tune","HelpOutlineOutlined","SettingsOutlined","AppsOutlined","AccountCircleOutlined","dialogStyle","height","maxWidth","maxHeight","boxShadow","borderRadius","Header","RecipientWrapper","Footer","SendButton","Button","_templateObject4","open","setOpenDrawer","data","setData","useState","sentEmailService","useApi","API_URLS","saveSentEmails","saveDraftService","saveDraftEmails","config","Username","process","REACT_APP_USERNAME","Password","REACT_APP_PASSWORD","Host","Port","onValueChange","e","_objectSpread","target","name","value","createPayload","type","to","from","subject","body","date","Date","image","starred","Dialog","PaperProps","sx","Typography","Close","fontSize","preventDefault","payload","call","error","closeComposeMail","onChange","TextField","multiline","rows","border","async","window","Email","send","To","From","Subject","Body","then","message","alert","sendEmail","DeleteOutline","SIDEBAR_DATA","title","icon","Photo","path","routes","emails","StarOutline","SendOutlined","InsertDriveFileOutlined","DeleteOutlined","Container","ComposeButton","SideBarContent","openDrawer","useParams","CreateOutlined","marginRight","List","map","NavLink","concat","ListItem","toLowerCase","backgroundColor","ComposeMail","StyledDrawer","Drawer","anchor","onClose","hideBackdrop","ModalProps","keepMounted","variant","borderRight","background","marginTop","Wrapper","Main","prevState","_Fragment","SideBar","Suspense","fallback","SuspenseLoader","Outlet","context","endpoint","method","getEmailFromType","toggleStarredMails","deleteEmails","moveEmailsToBin","toggleReadMails","serviceUrlObject","requestData","arguments","length","undefined","axios","url","urlObject","response","setResponse","setError","isLoading","setIsLoading","res","API"],"sourceRoot":""}